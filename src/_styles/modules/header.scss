// -------------------------
// Header
// -------------------------

// Fix sticky behavior so it only considers the sticky bar
.header {
  position: relative;
  z-index: $zindex-header;
  height: 50px;
  background-color: $header-bg;
  color: $header-text-color;

  &.is-fixed {
    position: fixed;
    width: 100%;
    top: 0;
  }

  @include media-breakpoint-up('lg') {
    height: 70px;
    &.hide-on-scroll {
      transform: translateY(-110%);
      transition: all $transition-duration-dropdown $transition-timing-function-in;
    }

    &.show-on-scroll {
      transform: translateY(0);
      transition: all $transition-duration-dropdown $transition-timing-function-out;
    }
  }
}

// Make a special version of .container that is fluid w/ max width and vertical flex-alignment of child elements
.header-container{
  @extend .container-fluid;
  display: flex;
  justify-content: space-between;
  height: 100%;
  padding: 0 40px;
  background-color: $header-bg;
  position: relative;
  z-index: 101;

  @include media-breakpoint-down('md') {
    padding: 0 20px;
  }
}

.header-logo {
  width: large-vw(200px, $header-logo-width);
  transition: width $transition-duration-dropdown $transition-timing-function-out;

  @include media-breakpoint-down('md') {
    width: 200px;
  }
}

.header-logo__image {
  transform: translateZ(0); // Prevent bluriness from scaling
  display: block;
  margin: auto;
  width: 80%;

  @include media-breakpoint-up('lg') {
    width: unset;
    max-height: 32px;
  }
}

.header-nav {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex: 1;

  // Space out each nav
  padding-left: $grid-gutter-width/2;
  padding-right: $grid-gutter-width/2;

  &.header-nav--left {
    padding-left: 0;
  }

  &.header-nav--right {
    padding-right: 0;
    justify-content: flex-end;
  }

  &.header-nav--center {
    @media (min-width: $header-bp-min) {
      justify-content: center;
    }
  }


  // For the logo block, it can either be &.header-nav--center, or .header-nav--left
  // Default to showing it in the center on large screens, but allow it flush left if necessary
  &.header-nav--logo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);


    &:not(.header-nav--left) {

      @media (max-width: $header-bp-min - 1px) {
        padding-left: 0;
      }
    }
  }

  .hide-on-mobile {
    @include media-breakpoint-down('md') {
      display: none;
    }
  }
}

// List of menu items
.header-nav__menu {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;

  &:hover .icon {
    fill: currentColor;
  }
}

.header-nav__menu-item {
  display: inline-block;
  cursor: pointer;

  & + & {
    margin-left: 34px;

    @include media-breakpoint-down('md') {
      margin-left: 10px;
    }
  }

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }

  .icon {
    width: 30px;
    color: $white;

    @include media-breakpoint-down('md') {
      width: 20px;
    }
  }

  &.header-nav__menu-item--search.search-is-open .icon {
    color: $gray-dark;
  }

  .hamburger {
    width: auto;
    padding: 15px 2px;
    line-height: 0;
    display: inline-block;
    cursor: pointer;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
    color: $white;
    box-shadow: none;

    @include media-breakpoint-down('md') {
      margin-bottom: 7px;
    }

    .hamburger-box {
      position: relative;
      display: inline-block;
      width: 35px;
      vertical-align: middle;
      margin-right: 10px;

      @include media-breakpoint-down('md') {
        width: 25px;
      }
    }

    &.is-open .hamburger-inner {
      &::before {
        top: 0;
        transform: rotate(-135deg);
        transition: top 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
      &::after {
        bottom: 0;
        transform: rotate(-45deg);
        transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }

    .hamburger-text {
      font-size: 15px;
      line-height: 1;
      font-family: $font-family-base;
      text-transform: uppercase;
    }
  }

  .hamburger-inner {
    display: block;
    top: 50%;

    &,
    &::before,
    &::after {
      width: 100%;
      height: 6px;
      position: absolute;
      background: transparent;

      @include media-breakpoint-down('md') {
        height: 4px;
      }
    }

    &::before,
    &::after {
      background-color: $white;
      content: "";
      display: block;
    }
    &::before {
      top: -10px;
      transition: top 0.075s 0.20s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);

      @include media-breakpoint-down('md') {
        top: -6px
      }
    }

    &::after {
      bottom: -10px;
      transition: bottom 0.075s 0.20s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);

      @include media-breakpoint-down('md') {
        bottom: -6px
      }
    }
  }
}

.header-cart__badge {
  display: inline-block;
  position: relative;
}

.header-cart__badge-count {
  display: none;
  position: absolute;
  top:10px;
  right: -6px;
  min-width: 20px;
  color: $black;
  font-size: 11px;
  line-height: 20px;
  text-align: center;
  border-radius: 50%;
  font-family: $font-family-heading-large;
  background-color: $green;

  &.has-items {
    display: block;
  }

  @include media-breakpoint-down('md') {
    top: 0;
  }
}

.header__filler {
  display: none;

  .is-fixed ~ & {
    display: block;
  }
}

// Dropdown
.header-dropdown {
  position: absolute;
  z-index: -1;
  top: 100%;
  left: 0;
  right: 0;
  padding: 20px 0;
  background: $header-dropdown-bg;
  pointer-events: none;
  opacity: 0;
  box-shadow: $header-dropdown-box-shadow;
  transition: opacity $transition-duration-dropdown $transition-timing-function-dropdown-out;

  &.is-open,
  &.is-forced-open {
    opacity: 1;
    pointer-events: auto;
    transition: opacity $transition-duration-dropdown $transition-timing-function-dropdown-in;
  }
}

.header-dropdown__menu {
  display: inline-block;
  vertical-align: top;

  & + & {
    margin-left: $header-dropdown-menu-spacing;
  }

  ul {
    @extend .list-unstyled;

    // Style child menus
    ul {
      margin-top: 10px;
      padding-left: 15px;
    }

    > li:not(:last-child) {
      margin-bottom: 15px;
    }
  }
}

.header-dropdown__ctas {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin-left: -#{($grid-gutter-width / 2)};
  margin-right: -#{($grid-gutter-width / 2)};
}

.header-dropdown__cta {
  // This allows the CTA blocks to adjust their sizing based on sibling count.
  // But set a max-width to prevent them from growing too large
  flex-grow: 1;
  flex-basis: 25%;
  max-width: percentage(1/3);
  padding-left: $grid-gutter-width / 2;
  padding-right: $grid-gutter-width / 2;
}

.header-dropdown__cta-image {
  position: relative;
  width: 100%;
  padding-bottom: percentage(4/6); // Change this value if you want to change the shape of the CTA image
  margin-bottom: $grid-gutter-width/2;
  background: {
    position: center;
    size: cover;
  }
}

.main-navigation {
  width: 100%;

  .drawer {
    max-width: unset;
    width: 100%;
    height: 100%;
    background-color: $slate-gray;
    border: none;
    overflow: hidden;

    &.is-visible {
      transition: transform $transition-duration-base $transition-timing-function-in-out-ui !important;
    }
  }

  .drawer__inner {
    display: flex;
    height: 100%;

    @include media-breakpoint-down('sm') {
      flex-wrap: wrap;
      overflow-y: auto;
    }
  }

  .drawer .drawer__close {
    top: 50%;
    transform: translateY(-50%);
    svg {
      height: large-vw(25px, 45px);
      width: large-vw(25px, 45px);

      @include media-breakpoint-down('md') {
        height: 25px;
        width: 25px;
      }
    }

    svg path {
      fill: $white;
    }
  }
}
