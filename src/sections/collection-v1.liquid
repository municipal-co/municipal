{%- comment %}

  Collection Section
  ------------------------------------------------------------------------------

  The tags using for filtering are the ones that starts with:
    - `color:`
    - `size:`

{% endcomment -%}

{% assign filter_types = 'color,size' | split: "," %}
{% assign promo_position = collection.metafields.custom_fields["promo_position"] | times: 1 %}

<div class="layout-content-wrapper" data-section-id="{{ section.id }}" data-section-type="collection">

  <div class="container-fluid">
    <div class="row justify-content-center">
      <div class="col-24">
        <div class="collection-filter-bar" data-filter-bar>
          {% comment %}
            Vertically align groupings.  Space them out horizontally, flush to the edges
            Make sure you put the if statements *inside* the .collection-filter-bar__grouping elements to always output tags even if they are empty.
            This will ensure that flex will always space them out appropriately
          {% endcomment %}
          <div class="collection-filter-bar__grouping collection-filter-bar__grouping--breadcrumb">
            <nav class="breadcrumbs" role="navigation" aria-label="breadcrumbs">
              {% if collection.metafields.custom_fields["parent_category"] != blank %}
                <div class="breadcrumbs__crumb">
                  {% assign parent_collection = collections[collection.metafields.custom_fields["parent_category"]] %}
                  <a href="{{ parent_collection.url }}">
                    {{ parent_collection.title }}
                  </a>
                </div>
              {% endif %}
              <div class="breadcrumbs__crumb">
                <span class="breadcrumbs__crumb">
                  {{ collection.title }}
                </span>
              </div>
            </nav>

          </div>
          <div class="collection-filter-bar__grouping collection-filter-bar__grouping--filters">
            <button class="btn btn-cta btn-sm collection-filter-bar__filter-toggler" data-filters-toggler>
              {% include 'icon-filters' %}
              Filter
            </button>

          </div>
        </div>
      </div>
      {% if collection.metafields.custom_fields["collection_section"] != blank %}
        {% assign separator = "|###|" %}
        {% assign collection_array = collection.metafields.custom_fields["collection"] | split: separator %}
        {% assign collection_title_array = collection.metafields.custom_fields["collection_title"] | split: separator %}
        {% assign collection_description_array = collection.metafields.custom_fields["collection_description"] | split: separator %}
        {% assign show_promo_card_array = collection.metafields.custom_fields["show_promo_card"] | split: separator %}
        {% assign promo_card_image_array = collection.metafields.custom_fields["promo_card_image"] | split: separator %}
        {% assign promo_card_position_array = collection.metafields.custom_fields["promo_card_position"] | split: separator %}
        {% assign fc_keys = collection.metafields.custom_fields["collection_section"] | split: "," %}
        {% assign section_index = 0 %}

        {% for i in fc_keys %}
          {% assign index = i | plus: 0 %}
          {% assign section_collection = collection_array[index] %}
          {% assign collection_title = collection_title_array[index] %}
          {% assign collection_description = collection_description_array[index] %}
          {% assign show_promo_card = show_promo_card_array[index] %}
          {% assign promo_card_image = promo_card_image_array[index] %}
          {% assign promo_card_position = promo_card_position_array[index] | times: 1 %}
          {% assign the_collection = collections[section_collection] %}

          {% if show_promo_card == '1' %}
            {% assign show_promo = true  %}
          {% endif %}

          {% if section_collection != blank and the_collection.products.size > 0%}
            {% assign section_index = section_index | plus: 1 %}

            <div class="collection-section col-lg-22 col-20" data-animated-background="#ffffff">
              {% if collection_title != blank %}
                <h2 class="collection-section__title h2">{{ collection_title }}</h2>
              {% endif %}

              {% if collection_description != blank %}
                <div class="collection-section__description p2">{{ collection_description }}</div>
              {% endif %}

              <div class="content-grid" data-collection-grid="{{the_collection.handle}}" data-collection-url="{{the_collection.url}}">
                {% assign printed_cards = 0 %}
                {% for product in the_collection.products %}

                  {% if show_promo == true and printed_cards == promo_card_position %}
                    <div class="promo_card content-grid__item frame">
                      <div class="promo-card-inner">
                        <div class="promo_card__image frame frame--1x1">
                          {% render 'image_tag'
                                    image: promo_card_image,
                                    object_fit: "contain"
                          %}
                        </div>
                      </div>
                    </div>
                    {% assign show_promo = false  %}
                  {% endif %}

                  {% for option in product.options_with_values %}
                    {% if option.name == 'Color' %}
                      {% assign product_colors = option.values %}

                      {% for color in product_colors %}
                        {% assign default_variant = blank %}
                        {% for variant in product.variants %}
                          {% if variant.title contains color %}
                            {% assign default_variant = variant %}
                          {% endif %}
                        {% endfor %}

                        {% comment %}Checks for color filtering{% endcomment %}
                        {% assign hide_card = false %}
                        {% assign color_downcase = color | downcase %}
                        {% if current_tags != blank %}
                          {% for current_tag in current_tags %}
                          {% assign current_tag_downcase = current_tag | downcase  %}
                            {% if current_tag_downcase contains 'color' and current_tag_downcase contains color_downcase %}
                              {% assign hide_card = false %}
                              {% break %}
                            {% else %}
                              {% assign hide_card = true %}
                            {% endif %}
                          {% endfor %}
                        {% endif %}
                        <div class="content-grid__item {% if hide_card %} hide{% endif %}" data-grid-item>
                          {% include 'product-card',
                             product: product,
                             variant: default_variant,
                             show_sizes: true,
                             show_colors: true,
                             show_tag: true,
                             color: color %}
                        </div>

                        {% assign printed_cards = printed_cards | plus: 1 %}
                      {% endfor %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}

                {% if show_promo == true %}
                  <div class="promo_card content-grid__item frame">
                    <div class="promo-card-inner">
                      <div class="promo_card__image frame frame--1x1">
                        {% render 'image_tag'
                                  image: promo_card_image,
                                  object_fit: "contain"
                        %}
                      </div>
                    </div>
                  </div>
                {% endif %}
              </div>
              {% assign grid_container = '[data-collection-grid=' | append: the_collection.handle | append: ']' %}
              {% assign tags_filters = current_tags | join: '+' %}
              {% if the_collection.products.size > 50 %}
                {% assign collection_next_page = the_collection.url | append: '?page=2' %}
              {% endif %}
                {% include 'load-more'
                   card_selector: '[data-grid-item]',
                   grid_container: grid_container,
                   next_page_url: collection_next_page,
                   update_url: "false" %}
            </div>
          {% endif %}

          {% if promo_position == section_index %}
            {% include 'collection-promo' %}
          {% elsif forloop.last and promo_position > forloop.length %}
            {% include 'collection-promo' %}
          {% endif %}
        {% endfor %}
      {% endif %}
    </div>
  </div>

  <div class="filters-drawer drawer drawer--right" data-filters-drawer>
    <div class="drawer__inner">
      <div class="drawer__header">
        <a href="#" class="drawer__close" data-drawer-close>
          {% include 'icon-close' %}
          <span class="sr-only"></span>
        </a>
        <h5 class="drawer__header-title">Filter</h5>
      </div>
      <div class="drawer__body">
        <div class="drawer__body-contents">
          {% include 'collection-sort' %}
          {% include 'collection-filters'
            size_filters: section.settings.size_filters
          %}

          <button class="btn btn-block btn-primary" data-filter-enable data-local-filtering="false">
            View Results
          </button>
          <a href="{{ collection.url }}" class="btn btn-cta btn-block btn-sm collection-filter__reset" data-filter-clear>
            {% include 'icon-close' %} Clear All
          </a>
        </div>
      </div>
    </div>
  </div>

  {% comment %} This JSON is required for filtering and sorting {% endcomment %}
  {% capture collection_url %}
    {% if collection.handle == "all" %}
      /collections/all
    {% else %}
      {{ collection.url }}
    {% endif %}
  {% endcapture %}

  <script type="application/json" data-collection-json>
    {
      "url": {{ collection_url | strip | json }},
      "sortDefault": {{ collection.default_sort_by | json }},
      "sortApplied": {{ collection.sort_by | json }}
    }
  </script>
</div>


{% schema %}
{
  "name": "collection",
  "settings": [
    {
      "type": "text",
      "id": "size_filters",
      "label": "Size filters",
      "default": "s, m, l, xl, 2xl",
      "info": "Define the order of the size filters, separate each value with a comma"
    }
  ]
}
{% endschema %}
